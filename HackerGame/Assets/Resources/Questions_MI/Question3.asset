%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 373121d22a558314d8b6f3a0704617cd, type: 3}
  m_Name: Question3
  m_EditorClassIdentifier: 
  question: What is the diamond problem in the context of multiple inheritance, and
    how can it be mitigated?
  answers:
  - The diamond problem occurs when a class inherits from two classes that have a
    common ancestor. This can lead to ambiguity in the inheritance hierarchy. It
    can be mitigated by using virtual inheritance or interfaces.
  - The diamond problem occurs when a class inherits from multiple classes but does
    not override any of their methods.
  - The diamond problem occurs when a class inherits from a single class but implements
    multiple interfaces.
  - The diamond problem occurs when a class has multiple constructors with the same
    signature.
