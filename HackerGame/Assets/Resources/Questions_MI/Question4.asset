%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 373121d22a558314d8b6f3a0704617cd, type: 3}
  m_Name: Question4
  m_EditorClassIdentifier: 
  question: In which scenarios would you prefer composition over inheritance, and
    vice versa?
  answers:
  - Composition is preferred over inheritance when the relationship between two classes
    is best described as "has-a" rather than "is-a." Inheritance is preferred when
    there is a clear "is-a" relationship and code reuse is a primary concern.
  - Composition is always preferred over inheritance because it leads to more flexible
    and maintainable code.
  - Inheritance is always preferred over composition because it simplifies code and
    leads to better performance.
  - Composition is preferred over inheritance when code reuse is a primary concern,
    while inheritance is preferred when flexibility and maintainability are more
    important.
