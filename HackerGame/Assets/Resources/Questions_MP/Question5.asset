%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 373121d22a558314d8b6f3a0704617cd, type: 3}
  m_Name: Question5
  m_EditorClassIdentifier: 
  question: Consider a scenario where a C++ program has multiple inheritance. How
    does polymorphic behavior differ in this case compared to single inheritance?
  answers:
  - It becomes more challenging to resolve function calls due to ambiguity.
  - Polymorphic behavior remains the same irrespective of inheritance type.
  - Derived classes can override functions from both base classes, leading to more
    diverse behavior.
  - Polymorphism cannot be achieved in multiple inheritance scenarios.
